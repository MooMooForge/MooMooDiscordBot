const Command = require("../Command");
const servers = require("../lib/data/servers");
const getServerInfo = require("../lib/getServerInfo");

const Discord = require("discord.js")
const axios = require("axios")

const { EmbedBuilder } = require('discord.js');


class ServerInfoCommand extends Command {
    constructor(client) {
        super(client);
        this.name = "serverinfo";
        this.cooldown = 5000;
        this.userPermissions = ["SendMessages"];
        this.description = "This is an example command";
        this.options = [
            {
                name: "region",
                description: "Put in the region of the server you want to request information for.",
                type: 3,
                choices: servers.extractRegionsToChoices(),
                required: true
            },
            {
                name: "index",
                description: "Put in the index of the server you want to request information for.",
                type: 4,
                required: true
            },
            {
                name: "type",
                description: "Please put in the server type for the command.",
                type: 3,
                choices: servers.serverTypes,
                required: true
            }
        ]
    }

    async execute(interaction, args) {
        let region = null;
        let index = null;
        let type = null;
        args.forEach(function (option) {
            switch (option.name) {
                case "region":
                    region = option.value;
                    break;
                case "index": {
                    let index = option.value;
                    break;
                }
                case "type":
                    type = option.value;
                    type = type ? type + "." : ""
                    break;

            }
        })
        let serverinfo = await getServerInfo(type, region, index);

        if (serverinfo) {
            await interaction.reply({
                embeds: [
                    {
                        color: parseInt("0x" + "#0099ff".slice(1)),
                        title: "Server Information",
                        fields: [
                            { name: "IP", value: serverinfo.ip, inline: true },
                            { name: "Player Count", value: `${serverinfo.games[0].playerCount}/${50}`, inline: true }
                        ],
                        footer: { text: "Generated by Discord Bot" }
                    }
                ]
            });

        } else {
            await interaction.editReply("Server not found")
        }
    }
}

module.exports = ServerInfoCommand;
